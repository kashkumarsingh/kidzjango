# Generated by Django 5.2.1 on 2025-05-23 10:43

import django.db.models.deletion
import tinymce.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(help_text='Email host (e.g., sandbox.smtp.mailtrap.io)', max_length=255)),
                ('port', models.PositiveIntegerField(help_text='Email port (e.g., 2525)')),
                ('use_tls', models.BooleanField(default=True, help_text='Use TLS for email connection')),
                ('username', models.CharField(help_text='Email username', max_length=255)),
                ('password', models.CharField(help_text='Email password', max_length=255)),
                ('default_from_email', models.EmailField(help_text="Default 'From' email address (e.g., noreply@kidzrunz.com)", max_length=254)),
                ('admin_email', models.EmailField(help_text='Admin email address for notifications (e.g., admin@kidzrunz.com)', max_length=254)),
                ('is_active', models.BooleanField(default=True, help_text='Activate this email configuration')),
            ],
            options={
                'verbose_name': 'Email Configuration',
                'verbose_name_plural': 'Email Configurations',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PricingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('features', tinymce.models.HTMLField(help_text='Enter a formatted list of features with icons (e.g., <ul><li>üèÉ Feature 1</li></ul>)')),
                ('type', models.CharField(choices=[('single', 'Single Session'), ('multi', 'Multi-Session')], default='single', max_length=20)),
                ('duration_hours', models.PositiveIntegerField(default=3, help_text='Total hours of the package (e.g., 3 for single, 18 for Neptune)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-type'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique reference ID for this booking', unique=True)),
                ('name', models.CharField(help_text="Visitor's full name", max_length=255)),
                ('email', models.EmailField(help_text="Visitor's email for confirmation", max_length=254)),
                ('phone', models.CharField(help_text="Visitor's phone number", max_length=20)),
                ('start_date', models.DateTimeField(blank=True, help_text='Set when booking is confirmed', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Calculated as start_date + duration_hours', null=True)),
                ('date_time', models.DateTimeField(blank=True, help_text='Initial appointment selection', null=True)),
                ('description', models.TextField(blank=True, help_text='Allergies or special needs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pricingpackage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
